#!/usr/bin/env node

/**
 * Script de inicializa√ß√£o do servidor MCP-Booster
 * Compat√≠vel com Windows, macOS e Linux
 */

const path = require('path');
const fs = require('fs');

// Fun√ß√£o para normalizar paths cross-platform
function resolvePath(relativePath) {
    return path.resolve(__dirname, relativePath);
}

// Verificar se o arquivo principal existe
const mainFile = resolvePath('../dist/index.js');
if (!fs.existsSync(mainFile)) {
    console.error('‚ùå Erro: Arquivo principal n√£o encontrado.');
    console.error('üìç Esperado em:', mainFile);
    console.error('üí° Execute "npm run build" no diret√≥rio do projeto para compilar.');
    process.exit(1);
}

try {
    // Importar e inicializar o servidor
    const { initializeServer } = require(mainFile);

    // Verificar se a fun√ß√£o est√° dispon√≠vel
    if (typeof initializeServer !== 'function') {
        console.error('‚ùå Erro: Fun√ß√£o initializeServer n√£o encontrada no m√≥dulo principal.');
        process.exit(1);
    }

    // Inicializar o servidor com configura√ß√µes padr√£o
    initializeServer();

} catch (error) {
    console.error('‚ùå Erro ao inicializar o servidor MCP-Booster:');
    console.error('üìù Detalhes:', error.message);

    // Mensagens espec√≠ficas por tipo de erro
    if (error.code === 'MODULE_NOT_FOUND') {
        console.error('üí° Solu√ß√£o: Verifique se todas as depend√™ncias est√£o instaladas.');
        console.error('   Execute: npm install');
    } else if (error.code === 'ENOENT') {
        console.error('üí° Solu√ß√£o: Verifique se o arquivo existe e as permiss√µes est√£o corretas.');
    }

    process.exit(1);
} 